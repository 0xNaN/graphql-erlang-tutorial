= {project} Tutorial
Jesper Louis Andersen <https://github.com/jlouis[@jlouis]>; Martin Gausby <https://github.com/gausby[@gausby]>; ShopGun ApS <https://github.com/shopgun[@shopgun]>
:toc: left
:icons: font
:source-highlighter: prettify
:sw_core: ../apps/sw_core
:sw_web: ../apps/sw_web
:project: Erlang GraphQL
:shopgun: ShopGun ApS
:cowboy-version: 1.1.x
:port-number: 17290
:imagesdir: ./images

{project} Tutorial

The guide here is a running example of the "Star Wars" API implemented
in Erlang through the ShopGun GraphQL engine. The intent is to provide
readers with enough information they can go build their own GraphQL
servers in Erlang.

We use the GraphQL system at https://shopgun.com as a data backend. We
sponsor this tutorial as part of our Open Source efforts. We developed
this GraphQL system to meet our demands as our system evolves. The
world of tracking businesses and offers is a highly heterogeneous
dataset, which requires the flexibility of something like GraphQL.

Because GraphQL provides a lot of great tooling, we decided to move
forward and implement a server backend for Erlang, which didn't exist
at the time.

At the same time, we recognize other people may be interested in the
system and its development. Hence the decision was made to open source
the GraphQL parts of the system.

include::introduction.asciidoc[Introduction]
include::why_graphql.asciidoc[Why GraphQL]
include::system_tour.asciidoc[System Tour]
include::getting_started.asciidoc[Getting Started]
include::schema.asciidoc[Schema]
include::scalar_resolution.asciidoc[Scalar Resolution]
include::type_resolution.asciidoc[Type Resolution]
include::object_resolution.asciidoc[Object Resolution]
include::transports.asciidoc[Transports]
include::graphiql.asciidoc[GraphiQL]
include::errors.asciidoc[Error Handling]
include::relay_modern.asciidoc[Relay Modern]
include::security.asciidoc[Security]

[[annotations]]
== Annotations

TBD

include::tricks.asciidoc[Tricks]

[appendix]
include::terms.asciidoc[Terms]

[appendix]
include::code.asciidoc[Code Overview]
[appendix]
[[changelog]]
== Changelog

May 22nd, 2017::
  Documented how to resolve array objects in <<resolving-lists>>.

