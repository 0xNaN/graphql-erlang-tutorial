[[introduction]]

== Introduction

The {project} system allows you to implement GraphQL servers in
Erlang. It works as a library which you can use on top of existing web
servers such as Cowboy, Webmachine, Yaws and so on.

As a developer, you work by providing a _schema_ which defines the
query structure which your server provides. Next, you map your schema
unto Erlang modules which then defines a binding of the two worlds.

Clients execute _queries_ to the server according to the structure of
the schema. The GraphQL system then figures out a _query plan_ for the
query and executes the query. This in turn calls your bound modules
and this allows you to process the query, load data, and so on.

.Changes

For a complete list of changes over time to this document, take a look
at the <<changelog>> appendix.

=== On this tutorial

CAUTION: We are currently building the document and are still making
changes to it. Things can still move around and change. If you see a
"`TBD`" marker it means that section is "`To Be Done`" and will be
written at a later point. In the same vein, the code base is being
built up as well, so it may not be that everything is fully described
yet.

CAUTION: The current version of {project} returns some errors which
are hard to parse and understand. It is our intention to make the
error handling better and more clean in a later version.

The tutorial you are now reading isn't really a tutorial per se where
you type in stuff and see the output. There is a bit too much code for
that kind of exposition. Rather, the tutorial describes a specific
project implemented by means of the GraphQL system. You can use the
ideas herein to build your own.

There are examples of how things are built however, so you may be able
to follow along and check out the construction of the system as a
whole. Apart from being a small self-contained functional GraphQL
project, it is also a small self-contained functional rebar3 project.
So there's that.

=== Prerequisites

Some Erlang knowledge is expected for reading this guide. General
Erlang concept will not be explained, but assumed to be known. Some
Mnesia knowledge will also help a bit in understanding what is going
on, though if you know anything about databases in general, that is
probably enough. Furthermore, some knowledge of the web in general is
assumed. We don't cover the intricacies of HTTP 1.1 or HTTP/2 for
instance.

This tutorial uses a couple of dependencies:

* Rebar3 is used to build the software
* Cowboy 1.x is used as a web server for the project
* GraphiQL is used as a web interface to the Graph System
* Erlang/OTP version 19.3.3 was used in the creation of this tutorial

=== Supported Platforms

The GraphQL system should run on any system which can run Erlang. The
library does not use any special tooling, nor does it make any
assumptions about the environment. If Erlang runs on your platform,
chances are that GraphQL will too.

=== Comments & Contact

The official repository location is

https://github.com/shopgun/graphql-erlang-tutorial

If you have comments on the document or corrections, please open an
https://github.com/shopgun/graphql-erlang-tutorial/issues[Issue] in
the above repository on the thing that is missing. Also, feel free to
provide pull requests against the code itself.

Things we are particularly interested in:

* Parts you don't understand. These often means something isn't
  described well enough and needs improvement.
* Code sequences that doesn't work for you. There is often some
  prerequisite the document should mention but doesn't.
* Bad wording. Things should be clear and precise. If a particular
  sentence doesn't convey information clearly, we'd rather rewrite it
  then confuse the next reader.
* Bugs in the code base.
* Bad code structure. A problem with a tutorial repository is that it
  can "`infect`" code in the future. People copy from this repository,
  so if it contains bad style, then that bad style is copied into
  other repositories, infecting them with the same mistakes.
* Stale documentation. Parts of the documentation which were relevant
  in the past but isn't anymore. For instance ID entries which doesn't
  work anymore.
  
=== License

Copyright (C) 2017 {shopgun}.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=== Acknowledgments

* Everyone involved in the Star Wars API. We use that data extensively.
* The GraphQL people who did an excellent job at answering questions
  and provided us with a well-written specification.
* Josh Price. The parser was derived from his initial work though it
  has been changed a lot since the initial commit.
